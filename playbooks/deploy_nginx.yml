---
- name: Deploy NGINX Service
  hosts: "{{ target_hosts | default(env) | default('prod') }}"
  become: true

  pre_tasks:
    - name: Include environment-specific variables
      ansible.builtin.include_vars: "../environments/{{ env | default('prod') }}.yml"
      tags: [always]

    - name: Display selected environment
      ansible.builtin.debug:
        msg: "Deploying to {{ env | default('prod') }} environment on {{ inventory_hostname }}"
      tags: [always]

    - name: Ensure NGINX package is available
      ansible.builtin.apt:
        name: nginx
        state: present
      environment: "{{ proxy_env | default({}) }}"
      when: not nginx_plus | bool
      register: nginx_check

    - name: Ensure NGINX Plus with App Protect WAF
      ansible.builtin.apt:
        name:
          - nginx-plus
          - app-protect
        state: present
      environment: "{{ proxy_env | default({}) }}"
      when: nginx_plus | bool and nginx_plus_license_key != "" and nginx_plus_license_cert != ""
      register: nginx_plus_check
      ignore_errors: true

    - name: Set permissions for NGINX folder
      ansible.builtin.file:
        path: "/etc/nginx"
        state: directory
        recurse: true
        owner: "{{ nginx_user }}"
        group: "{{ nginx_group }}"

    - name: Display pre-deployment status
      ansible.builtin.debug:
        msg: >
            Installation check: {{
              (nginx_plus | bool) | ternary(
                (nginx_plus_check is defined and nginx_plus_check.rc is defined and nginx_plus_check.rc == 0),
                (nginx_check is defined and nginx_check.rc is defined and nginx_check.rc == 0)
              )
            }},
            Validator service responding: {{
              validator_check is defined and validator_check.status is defined and validator_check.status == 200
            }}

  roles:
    - role: nginx
      tags: [nginx, web, configuration]

  post_tasks:
    - name: Verify NGINX configuration
      ansible.builtin.command: nginx -t
      register: nginx_syntax
      changed_when: false

    - name: Verify NGINX service is running
      ansible.builtin.systemd:
        name: nginx
        state: started
      register: nginx_running

    - name: Display deployment status
      ansible.builtin.debug:
        msg: "NGINX deployed successfully and running: {{ nginx_running.state == 'started' }}"
