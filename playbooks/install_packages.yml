---
- name: Install NGINX and Python dependencies
  hosts: "{{ target_hosts | default(env) | default('prod') }}"
  become: true

  pre_tasks:
    - name: Include environment-specific variables
      ansible.builtin.include_vars: "../environments/{{ env | default('prod') }}.yml"
      tags: [always]

    - name: Display selected environment
      ansible.builtin.debug:
        msg: "Installing packages for {{ env | default('prod') }} environment on {{ inventory_hostname }}"
      tags: [always]

  tasks:
    - name: Install rsyslog
      when: use_rsyslog | bool
      block:
        - name: Install rsyslog if not already present
          ansible.builtin.apt:
            name: rsyslog
            state: present

        - name: Ensure rsyslog is running and enabled
          ansible.builtin.service:
            name: rsyslog
            state: started
            enabled: true

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Python packages
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - python3-apt
        state: present

    - name: Install prerequisites for NGINX Plus
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - lsb-release
          - ca-certificates
          - wget
          - gnupg2
          - ubuntu-keyring
        state: present

    - name: Install NGINX Plus and App Protect WAF
      when: nginx_plus | bool and nginx_plus_license_key != "" and nginx_plus_license_cert != ""
      block:
        - name: Determine Ubuntu version codename
          ansible.builtin.command: lsb_release -cs
          register: ubuntu_codename
          changed_when: false

        - name: Verify supported Ubuntu version
          ansible.builtin.assert:
            that: ubuntu_codename.stdout in ['focal', 'jammy', 'noble']
            msg: "Only Ubuntu 20.04 (Focal), 22.04 (Jammy), and 24.04 (Noble) are supported for NGINX App Protect WAF"

        - name: Create directory for NGINX Plus license files
          ansible.builtin.file:
            path: "{{ nginx_plus_license_dir }}"
            state: directory
            mode: '0755'

        - name: Copy NGINX Plus license files
          ansible.builtin.copy:
            src: "roles/nginx/license/{{ inventory_hostname }}/{{ item.src }}"
            dest: "{{ nginx_plus_license_dir }}/{{ item.dest }}"
            mode: '0644'
          with_items:
            - { src: "{{ nginx_plus_license_cert }}", dest: "nginx-repo.crt" }
            - { src: "{{ nginx_plus_license_key }}", dest: "nginx-repo.key" }
            - { src: "{{ nginx_plus_jwt_token }}", dest: "license.jwt" }

        - name: Copy NGINX Plus JWT token
          ansible.builtin.copy:
            src: "roles/nginx/license/{{ inventory_hostname }}/{{ nginx_plus_jwt_token }}"
            dest: "/etc/nginx/license.jwt"
            mode: '0644'

        - name: NGINX Plus key
          ansible.builtin.apt_key:
            url: https://cs.nginx.com/static/keys/nginx_signing.key
            keyring: /usr/share/keyrings/nginx-archive-keyring.gpg
            state: present

        - name: NGINX App Protect key
          ansible.builtin.apt_key:
            url: https://cs.nginx.com/static/keys/app-protect-security-updates.key
            keyring: /usr/share/keyrings/nginx-archive-keyring.gpg
            state: present

        - name: Add NGINX Plus repository
          ansible.builtin.apt_repository:
            repo: >
              deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg]
              https://pkgs.nginx.com/plus/ubuntu {{ ubuntu_codename.stdout }} nginx-plus
            # repo: "deb https://pkgs.nginx.com/plus/ubuntu {{ ubuntu_codename.stdout }} nginx-plus"
            state: present
            update_cache: false

        - name: Add App Protect repository
          ansible.builtin.apt_repository:
            repo: >
              deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg]
              https://pkgs.nginx.com/app-protect/ubuntu {{ ubuntu_codename.stdout }} nginx-plus
            state: present
            update_cache: false

        - name: Add App Protect security updates repository
          ansible.builtin.apt_repository:
            repo: >
              deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg]
              https://pkgs.nginx.com/app-protect-security-updates/ubuntu {{ ubuntu_codename.stdout }} nginx-plus
            state: present
            update_cache: false

        - name: Download NGINX Plus apt configuration
          ansible.builtin.get_url:
            url: https://cs.nginx.com/static/files/90pkgs-nginx
            dest: /etc/apt/apt.conf.d/90pkgs-nginx
            mode: '0644'

        - name: Install NGINX Plus with App Protect WAF
          ansible.builtin.apt:
            name:
              - nginx-plus
              - app-protect
            state: present
            update_cache: true

    - name: Install open source NGINX
      ansible.builtin.apt:
        name: nginx
        state: present
      when: not nginx_plus | bool
